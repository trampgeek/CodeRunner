define("qtype_coderunner/ui_scratchpad",["exports","jquery","core/ajax","core/str","core/templates","qtype_coderunner/userinterfacewrapper"],(function(_exports,_jquery,_ajax,_str,_templates,_userinterfacewrapper){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Implementation of the html_ui user interface plugin. For overall details
   * of the UI plugin architecture, see userinterfacewrapper.js.
   *
   * This plugin replaces the usual textarea answer element with a div
   * containing the author-supplied HTML. The serialisation of that HTML,
   * which is what is essentially copied back into the textarea for submissions
   * as the answer, is a JSON object. The fields of that object are the names
   * of all author-supplied HTML elements with a class 'coderunner-ui-element';
   * all such objects are expected to have a 'name' attribute as well. The
   * associated field values are lists. Each list contains all the values, in
   * document order, of the results of calling the jquery val() method in turn
   * on each of the UI elements with that name.
   * This means that at least input, select and textarea
   * elements are supported. The author is responsible for checking the
   * compatibility of other elements with jquery's val() method.
   *
   * The HTML to use in the answer area must be provided as the contents of
   * either the globalextra field or the prototypeextra field in the question
   * authoring form. The choice of which is set by the html_src UI parameter, which
   * must be either 'globalextra' or 'prototypeextra'.
   *
   * If any fields of the answer html are to be preloaded, these should be specified
   * in the answer preload with json of the form '{"<fieldName>": "<fieldValueList>",...}'
   * where fieldValueList is a list of all the values to be assigned to the fields
   * with the given name, in document order.
   *
   * To accommodate the possibility of dynamic HTML, any leftover preload values,
   * that is, values that cannot be positioned within the HTML either because
   * there is no field of the required name or because, in the case of a list,
   * there are insufficient elements, are assigned to the data['leftovers']
   * attribute of the outer html div, as a sub-object of the original object.
   * This outer div can be located as the 'closest' (in a jQuery sense)
   * div.qtype-coderunner-html-outer-div. The author-supplied HTML must include
   * JavaScript to make use of the 'leftovers'.
   *
   * As a special case of the serialisation, if all values in the serialisation
   * are either empty strings or a list of empty strings, the serialisation is
   * itself the empty string.
   *
   * @module coderunner/ui_html
   * @copyright  Richard Lobb, 2022, The University of Canterbury
   * @copyright  James Napier, 2022, The University of Canterbury
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.Constructor=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates);const escapeHtml=text=>{const map={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return text.replace(/[&<>"']/g,(function(m){return map[m]}))},combinedOutput=(response,maxLen)=>{const limit=s=>s.length<=maxLen?s:s.substr(0,maxLen)+"... (truncated)";return response.cmpinfo+limit(response.output)+limit(response.stderr)},invertSerial=current=>"1"==current[0]?[""]:["1"],overwriteValues=(defaults,prescribed)=>{let overwritten={...defaults};if(prescribed)for(const[key,value]of Object.entries(defaults))overwritten[key]=prescribed[key]||value;return overwritten};_exports.Constructor=class{constructor(textAreaId,width,height,uiParams){const DEF_UI_PARAMS={scratchpad_name:"",button_name:"",prefix_name:"",help_text:"",run_lang:uiParams.lang,html_output:!1,disable_scratchpad:!1,wrapper_src:null};this.invertPreload=uiParams.invert_prefix,this.textArea=document.getElementById(textAreaId),this.textAreaId=textAreaId,this.height=height,this.readOnly=this.textArea.readonly,this.fail=!1,this.lang=uiParams.lang,this.numRows=this.textArea.rows,this.uiParams=overwriteValues(DEF_UI_PARAMS,uiParams),this.runWrapper=null;const wrapperSrc=this.uiParams.wrapper_src;wrapperSrc&&(this.runWrapper="globalextra"===wrapperSrc||"prototypeextra"===wrapperSrc?this.textArea.dataset[wrapperSrc]:null),this.outerDiv=null,this.reload()}failed(){return this.fail}failMessage(){return this.failString}sync(){if(!this.context)return;const prefixAns=document.getElementById(this.context.prefix_ans.id),showHide=document.getElementById(this.context.show_hide.id);let serialisation={answer_code:[""],test_code:[""],show_hide:[""],prefix_ans:[""]};this.answerTextarea&&(serialisation.answer_code=[this.answerTextarea.value]),this.testTextarea&&(serialisation.test_code=[this.testTextarea.value]),showHide&&!(el=>{if(!el.classList.contains("collapse"))throw Error("Element does not have collapse class");return!el.classList.contains("show")})(showHide)&&(serialisation.show_hide=["1"]),(null!=prefixAns&&prefixAns.checked||this.context.disable_scratchpad)&&(serialisation.prefix_ans=["1"]),this.invertPreload&&(serialisation.prefix_ans=invertSerial(serialisation.prefix_ans)),serialisation.prefix_ans=invertSerial(serialisation.prefix_ans),Object.values(serialisation).some((val=>1===val.length&&val[0].length>0))?(serialisation.prefix_ans=invertSerial(serialisation.prefix_ans),this.textArea.value=JSON.stringify(serialisation)):this.textArea.value=""}getElement(){return this.outerDiv}async handleRunButtonClick(ajax,outputDisplayArea){outputDisplayArea=(0,_jquery.default)(outputDisplayArea),this.sync();const htmlOutput=this.uiParams.html_output,maxLen=this.uiParams["max-output-length"]||3e4,preloadString=(0,_jquery.default)(this.textArea).val(),serial=this.readJson(preloadString),params=this.uiParams.params,code=(answerCode=serial.answer_code,testCode=serial.test_code,prefixAns=serial.prefix_ans[0],(template=this.runWrapper)||(template="{{ ANSWER_CODE }}\n{{ SCRATCHPAD_CODE }}"),prefixAns||(answerCode=""),(template=template.replaceAll("{{ ANSWER_CODE }}",answerCode)).replaceAll("{{ SCRATCHPAD_CODE }}",testCode));var answerCode,testCode,prefixAns,template;outputDisplayArea.html(""),htmlOutput&&outputDisplayArea.hide(),outputDisplayArea.next("div.filter-ace-inline-html").remove(),ajax.call([{methodname:"qtype_coderunner_run_in_sandbox",args:{contextid:M.cfg.contextid,sourcecode:code,language:this.uiParams.run_lang,params:JSON.stringify(params)},done:function(responseJson){const response=JSON.parse(responseJson),error=(response=>{const ERROR_RESPONSES=[[1,0,"error_access_denied"],[2,0,"error_unknown_language"],[3,0,"error_access_denied"],[4,0,"error_submission_limit_reached"],[5,0,"error_sandbox_server_overload"],[0,11,""],[0,12,""],[0,13,"error_timeout"],[0,15,""],[0,17,"error_memory_limit"],[0,21,"error_sandbox_server_overload"],[0,30,"error_excessive_output"]];for(const row of ERROR_RESPONSES)if(row[0]==response.error&&(0!=response.error||response.result==row[1]))return row[2];return"error_unknown_runtime"})(response);if(""===error)if(htmlOutput&&15===response.result){outputDisplayArea.next("div.filter-ace-inline-html").remove();const html=(0,_jquery.default)("<div class='filter-ace-inline-html 'style='background-color:#eff;padding:5px;'>"+response.output+"</div>");outputDisplayArea.after(html)}else{const text=combinedOutput(response,maxLen);outputDisplayArea.show(),""===text.trim()?outputDisplayArea.html('<span style="color:red">< No output! ></span>'):outputDisplayArea.html(escapeHtml(text))}else{let extra=0==response.error?combinedOutput(response,maxLen):"";"error_unknown_runtime"===error&&(extra+=response.error?"(Sandbox error code "+response.error+")":"(Run result: "+response.result+")"),(async(langStringName,textarea,additionalText)=>{const message=await(0,_str.get_string)(langStringName,"filter_ace_inline");textarea.show(),textarea.html(escapeHtml("*** "+message+" ***\n"+additionalText))})(error,outputDisplayArea,extra)}},fail:function(error){alert(error.message)}}])}updateContext(preload){this.context={id:this.textAreaId,disable_scratchpad:this.uiParams.disable_scratchpad,scratchpad_name:this.uiParams.scratchpad_name,button_name:this.uiParams.button_name,help_text:{text:this.uiParams.help_text},answer_code:{id:this.textAreaId+"_answer-code",name:"answer_code",text:preload.answer_code[0],lang:this.lang,rows:this.numRows},test_code:{id:this.textAreaId+"_test-code",name:"test_code",text:preload.test_code[0],lang:this.lang,rows:6},show_hide:{id:this.textAreaId+"_scratchpad",show:preload.show_hide[0]},prefix_ans:{id:this.textAreaId+"_prefix-ans",label:this.uiParams.prefix_name,checked:preload.prefix_ans[0]},output_display:{id:this.textAreaId+"_output-displayarea"},jquery_escape:function(){return function(text,render){return CSS.escape(render(text))}}}}readJson(preloadString){let serial;if(""!==preloadString){try{serial=JSON.parse(preloadString)}catch{serial={answer_code:[preloadString]}}if(!serial.hasOwnProperty("answer_code"))throw TypeError("JSON has wrong signature, missing answer_code field.")}return serial=overwriteValues({answer_code:[""],test_code:[""],show_hide:[""],prefix_ans:["1"]},serial),this.invertPreload&&(serial.prefix_ans=invertSerial(serial.prefix_ans)),serial}async reload(){const preloadString=this.textArea.value;let preload;try{preload=this.readJson(preloadString)}catch(error){return this.fail=!0,void(this.failString="scratchpad_ui_invalidserialisation")}this.updateContext(preload);try{const{html:html}=await _templates.default.renderForPromise("qtype_coderunner/scratchpad_ui",this.context),wrapperDiv=document.getElementById(this.textAreaId).nextSibling;wrapperDiv.innerHTML=html,this.outerDiv=wrapperDiv.firstChild,this.answerTextarea=document.getElementById(this.context.answer_code.id),this.testTextarea=document.getElementById(this.context.test_code.id),this.answerCodeUi=(0,_userinterfacewrapper.newUiWrapper)("ace",this.context.answer_code.id),this.testTextarea&&(this.testCodeUi=(0,_userinterfacewrapper.newUiWrapper)("ace",this.context.test_code.id));const runButton=document.getElementById(this.textAreaId+"_run-btn"),outputDisplayarea=document.getElementById(this.context.output_display.id);runButton&&runButton.addEventListener("click",(()=>this.handleRunButtonClick(_ajax.default,outputDisplayarea))),wrapperDiv.style.resize="none"}catch(e){this.fail=!0,this.failString="UI template failed to load."}}resize(){}hasFocus(){var _this$answerCodeUi,_this$testCodeUi;let focused=!1;return null!==(_this$answerCodeUi=this.answerCodeUi)&&void 0!==_this$answerCodeUi&&_this$answerCodeUi.uiInstance.hasFocus()&&(focused=!0),null!==(_this$testCodeUi=this.testCodeUi)&&void 0!==_this$testCodeUi&&_this$testCodeUi.uiInstance.hasFocus()&&(focused=!0),focused}destroy(){var _this$answerCodeUi2,_this$testCodeUiCodeU,_this$outerDiv;this.sync(),null===(_this$answerCodeUi2=this.answerCodeUi)||void 0===_this$answerCodeUi2||_this$answerCodeUi2.uiInstance.destroy(),null===(_this$testCodeUiCodeU=this.testCodeUiCodeUi)||void 0===_this$testCodeUiCodeU||_this$testCodeUiCodeU.uiInstance.destroy(),null===(_this$outerDiv=this.outerDiv)||void 0===_this$outerDiv||_this$outerDiv.remove(),this.outerDiv=null}}}));

//# sourceMappingURL=ui_scratchpad.min.js.map